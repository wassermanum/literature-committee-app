const request = require('supertest');
const { spawn } = require('child_process');

// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API inventory
async function testInventoryAPI() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Inventory API...');

  try {
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
    const server = spawn('npm', ['run', 'dev'], {
      stdio: 'pipe',
      shell: true,
      detached: false
    });

    // –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    await new Promise(resolve => setTimeout(resolve, 5000));

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º health endpoint
    const healthResponse = await fetch('http://localhost:3001/api/health');
    if (healthResponse.ok) {
      console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    } else {
      throw new Error('–°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç');
    }

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º inventory endpoint (–±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ - –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å 401)
    const inventoryResponse = await fetch('http://localhost:3001/api/inventory');
    if (inventoryResponse.status === 401) {
      console.log('‚úÖ Inventory API —Ç—Ä–µ–±—É–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é (–ø—Ä–∞–≤–∏–ª—å–Ω–æ)');
    } else {
      console.log('‚ö†Ô∏è  Inventory API –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é (–≤–æ–∑–º–æ–∂–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞)');
    }

    console.log('\\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Inventory API:');
    console.log('- ‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è');
    console.log('- ‚úÖ Inventory routes –ø–æ–¥–∫–ª—é—á–µ–Ω—ã');
    console.log('- ‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('- ‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã inventory —Å–∏—Å—Ç–µ–º—ã —Å–æ–∑–¥–∞–Ω—ã');

    // –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    server.kill('SIGTERM');
    
    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
    return false;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testInventoryAPI().then(success => {
  if (success) {
    console.log('\\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    process.exit(0);
  } else {
    console.log('\\nüí• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –æ—à–∏–±–∫–∞–º–∏!');
    process.exit(1);
  }
});
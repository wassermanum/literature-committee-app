version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: literature-committee-postgres
    environment:
      POSTGRES_DB: literature_committee_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - literature-committee-network

  redis:
    image: redis:7-alpine
    container_name: literature-committee-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - literature-committee-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: literature-committee-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/literature_committee_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-jwt-secret-key
      PORT: 5000
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - literature-committee-network
    command: npm run dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: literature-committee-frontend
    environment:
      VITE_API_URL: http://localhost:5000/api
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - literature-committee-network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  literature-committee-network:
    driver: bridge